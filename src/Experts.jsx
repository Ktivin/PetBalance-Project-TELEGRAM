// src/Experts.jsx
import React, { useMemo, useState } from "react";
import Header from "./components/Header";

// –ø–∞–ª–∏—Ç—Ä–∞ –ø–æ–¥ –±—Ä–µ–Ω–¥
const colors = {
  primary: "#1F5A4F",
  accent:  "#F37483",
  light:   "#F2FAFD",
  text:    "#111827",
};

// üîπ —É—Ç–∏–ª: –∏–Ω–∏—Ü–∏–∞–ª—ã
function getInitials(name = "") {
  return name
    .split(" ")
    .filter(Boolean)
    .slice(0, 2)
    .map(s => s[0]?.toUpperCase() || "")
    .join("");
}

// üîπ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –∞–≤–∞—Ç–∞—Ä–∫–∏ (–µ—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ)
function Avatar({ name, src }) {
  if (src) {
    return (
      <img
        src={src}
        alt={name}
        className="h-16 w-16 rounded-xl object-cover border"
        style={{ borderColor: "#1F5A4F22" }}
        onError={(e) => { e.currentTarget.src = ""; e.currentTarget.onerror = null; }}
      />
    );
  }
  const initials = getInitials(name);
  return (
    <div
      className="h-16 w-16 rounded-xl grid place-items-center border text-lg font-semibold"
      style={{
        borderColor: "#1F5A4F22",
        color: colors.primary,
        background: `radial-gradient(120px 80px at 80% -20%, ${colors.accent}22, transparent 60%), 
                     radial-gradient(120px 80px at -20% 100%, ${colors.primary}18, transparent 60%), #fff`,
      }}
      aria-label={name}
    >
      {initials || "E"}
    </div>
  );
}

export default function Experts() {
  // –¥–∞–Ω–Ω—ã–µ ‚Äî –¥–æ–±–∞–≤–ª—è–π —Å–≤–æ–∏ —Ñ–æ—Ç–æ –≤ /public/experts/*.jpg
  const allExperts = [
   {
      name: "–•–æ—Ö–ª–∞—á–æ–≤ –ù—ñ–∫—ñ—Ç–∞",
      role: "–õ—ñ–∫–∞—Ä-—Å—Ç–∞—Ü—ñ–æ–Ω–∞—Ä, —Ç–µ—Ä–∞–ø—ñ—è",
      tags: ["–¢–µ—Ä–∞–ø—ñ—è", "–ê–Ω–∞–ª—ñ–∑–∏", "24/7"],
      city: "–ö–∏—ó–≤ / Online",
      photo: "/experts/maria.jpg", // –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî –±—É–¥–µ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
      rating: 5,
    },
    {
      name: "–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª—å",
      role: "–õ—ñ–∫–∞—Ä-—Å—Ç–∞—Ü—ñ–æ–Ω–∞—Ä, —Ç–µ—Ä–∞–ø—ñ—è",
      tags: ["–¢–µ—Ä–∞–ø—ñ—è", "–ê–Ω–∞–ª—ñ–∑–∏", "24/7"],
      city: "–ö–∏—ó–≤ / Online",
      photo: "/experts/maria.jpg", // –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî –±—É–¥–µ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
      rating: 5,
    },
    {
      name: "–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ì–Ω–∞—Ç—é–∫",
      role: "–ö—ñ–Ω–æ–ª–æ–≥",
      tags: ["–ë–µ–∑–ø–µ–∫–∞", "–°–ª—É—Ö–Ω—è–Ω—ñ—Å—Ç—å"],
      city: "–õ—å–≤—ñ–≤ / Online",
      photo: "/experts/oleksandr.jpg",
      rating: 5,
    },
    {
      name: "–Ñ–≤–≥–µ–Ω—ñ—è –õ–∏—Ç–≤–∏–Ω",
      role: "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥—ñ—è",
      tags: ["–®–∫—ñ—Ä–∞", "–ê–ª–µ—Ä–≥—ñ—ó", "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—è"],
      city: "–û–¥–µ—Å–∞ / Online",
      photo: "", // –Ω–µ—Ç —Ñ–æ—Ç–æ ‚Üí –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
      rating: 4,
    },
    {
      name: "–Ü—Ä–∏–Ω–∞ –î–æ—Ä–æ—à",
      role: "–ù—É—Ç—Ä–∏—Ü—ñ–æ–ª–æ–≥",
      tags: ["–•–∞—Ä—á—É–≤–∞–Ω–Ω—è", "–î—ñ—î—Ç–∞", "–í–∞–≥–∞"],
      city: "–ü—Ä–∞–≥–∞ / Online",
      photo: "/experts/iryna.jpg",
      rating: 5,
    },
  ];

  const domains = ["–£—Å—ñ", "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ñ—è", "–ö—ñ–Ω–æ–ª–æ–≥—ñ—è", "–ó–æ–æ–ø—Å–∏—Ö–æ–ª–æ–≥—ñ—è", "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥—ñ—è", "–ù—É—Ç—Ä–∏—Ü—ñ–æ–ª–æ–≥—ñ—è"];
  const [active, setActive] = useState("–£—Å—ñ");
  const [query, setQuery] = useState("");

  const filtered = useMemo(() => {
    return allExperts.filter((e) => {
      const matchesDomain =
        active === "–£—Å—ñ" ||
        (active === "–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä—ñ—è" && /–ª—ñ–∫–∞—Ä|—Ç–µ—Ä–∞–ø|–≤–µ—Ç/i.test(e.role)) ||
        (active === "–ö—ñ–Ω–æ–ª–æ–≥—ñ—è" && /–∫—ñ–Ω–æ–ª–æ–≥/i.test(e.role)) ||
        (active === "–ó–æ–æ–ø—Å–∏—Ö–æ–ª–æ–≥—ñ—è" && /–∑–æ–æ–ø—Å–∏—Ö/i.test(e.role)) ||
        (active === "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥—ñ—è" && /–¥–µ—Ä–º–∞—Ç/i.test(e.role)) ||
        (active === "–ù—É—Ç—Ä–∏—Ü—ñ–æ–ª–æ–≥—ñ—è" && /–Ω—É—Ç—Ä–∏—Ü|—Ö–∞—Ä—á/i.test(e.role));

      const q = query.trim().toLowerCase();
      const matchesSearch =
        !q ||
        e.name.toLowerCase().includes(q) ||
        e.role.toLowerCase().includes(q) ||
        e.tags.join(" ").toLowerCase().includes(q) ||
        (e.city || "").toLowerCase().includes(q);

      return matchesDomain && matchesSearch;
    });
  }, [active, query]);

  return (
    <div className="min-h-screen" style={{
      background: `radial-gradient(1200px 600px at 100% -10%, ${colors.accent}10 0%, transparent 60%),
                   radial-gradient(1000px 500px at -10% 0%, ${colors.primary}10 0%, transparent 60%), #faf9fb`
    }}>
      {/* –æ–±—â–∏–π —Ö–µ–¥–µ—Ä —Å–æ —Å—Å—ã–ª–∫–æ–π-–ª–æ–≥–æ—Ç–∏–ø–æ–º */}
      <Header />

      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Hero-–ø–æ–ª–æ—Å–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <section
          className="rounded-3xl p-6 border mb-6"
          style={{
            borderColor: `${colors.primary}22`,
            background: `linear-gradient(135deg, #fff, ${colors.light})`,
          }}
        >
          <div className="flex flex-col md:flex-row md:items-end md:justify-between gap-4">
            <div>
              <div
                className="inline-block text-xs font-semibold rounded-full px-3 py-1 border"
                style={{ color: colors.primary, borderColor: `${colors.primary}30`, background: `${colors.primary}0D` }}
              >
                –ö–æ–º–∞–Ω–¥–∞ Pet Balance
              </div>
              <h1 className="mt-3 text-3xl font-bold" style={{ color: colors.text }}>
                –ù–∞—à—ñ –µ–∫—Å–ø–µ—Ä—Ç–∏
              </h1>
              <p className="mt-2 text-zinc-600">
                –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏, –∫—ñ–Ω–æ–ª–æ–≥–∏, –Ω—É—Ç—Ä–∏—Ü—ñ–æ–ª–æ–≥–∏. –û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –ø—ñ–¥ –≤–∞—à –∑–∞–ø–∏—Ç.
              </p>
            </div>

            {/* –ü–æ–∏—Å–∫ */}
            <div className="flex items-center gap-2">
              <input
                value={query}
                onChange={(e) => setQuery(e.target.value)}
                placeholder="–ü–æ—à—É–∫: —ñ–º'—è, –Ω–∞–ø—Ä—è–º, –º—ñ—Å—Ç–æ‚Ä¶"
                className="rounded-xl border px-4 py-2 w-64"
                style={{ borderColor: `${colors.primary}22` }}
              />
            </div>
          </div>

          {/* –§–∏–ª—å—Ç—Ä—ã-–¥–æ–º–µ–Ω—ã */}
          <div className="mt-4 flex flex-wrap gap-2">
            {domains.map((d) => {
              const activeChip = d === active;
              return (
                <button
                  key={d}
                  onClick={() => setActive(d)}
                  className={`text-sm rounded-full px-3 py-1 border transition ${
                    activeChip ? "shadow-sm" : "hover:shadow"
                  }`}
                  style={{
                    borderColor: `${colors.primary}22`,
                    background: activeChip ? `${colors.primary}10` : "#fff",
                    color: activeChip ? colors.primary : colors.text,
                  }}
                >
                  {d}
                </button>
              );
            })}
          </div>
        </section>

        {/* –°–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
        <section className="grid sm:grid-cols-2 lg:grid-cols-3 gap-5">
          {filtered.map((p, idx) => (
            <article
              key={idx}
              className="group rounded-2xl border bg-white overflow-hidden transition-all hover:-translate-y-0.5 hover:shadow-md"
              style={{ borderColor: `${colors.primary}22` }}
            >
              {/* –≤–µ—Ä—Ö –±–ª–æ–∫–∞ —Å —Ñ–æ–Ω–æ–º/–≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
              <div
                className="p-5"
                style={{
                  background: `radial-gradient(180px 120px at 100% -20%, ${colors.accent}18, transparent 70%),
                               radial-gradient(180px 120px at -10% 120%, ${colors.primary}15, transparent 70%)`,
                }}
              >
                <div className="flex items-start gap-4">
                  <Avatar name={p.name} src={p.photo} />
                  <div className="min-w-0">
                    <div className="flex items-center gap-2 flex-wrap">
                      <h3 className="font-semibold text-lg" style={{ color: colors.text }}>
                        {p.name}
                      </h3>
                      {/* —Ä–µ–π—Ç–∏–Ω–≥ */}
                      <div className="flex items-center gap-0.5 text-amber-500 text-sm" aria-label={`–†–µ–π—Ç–∏–Ω–≥ ${p.rating}/5`}>
                        {"‚òÖ".repeat(p.rating)}
                        {"‚òÜ".repeat(5 - p.rating)}
                      </div>
                    </div>
                    <div className="text-sm text-zinc-600 truncate">{p.role}</div>
                    <div className="text-xs text-zinc-500 mt-1">{p.city}</div>
                  </div>
                </div>
              </div>

              {/* —Ç–µ–≥–∏/–∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ */}
              <div className="px-5 pb-5">
                <div className="flex flex-wrap gap-2">
                  {p.tags.map((t) => (
                    <span
                      key={t}
                      className="text-xs px-2 py-1 rounded-full border"
                      style={{
                        borderColor: `${colors.accent}44`,
                        background: `${colors.accent}10`,
                        color: colors.accent,
                      }}
                    >
                      {t}
                    </span>
                  ))}
                </div>

                {/* CTA –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ */}
                <div className="mt-4 flex items-center justify-between">
                  <a
                    href="/#book"
                    className="text-sm font-medium"
                    style={{ color: colors.accent }}
                  >
                    –ó–∞–ø–∏—Å–∞—Ç–∏—Å—è ‚Üí
                  </a>
                  <a
                    href="/#how"
                    className="text-sm text-zinc-600 hover:opacity-80"
                    aria-label="–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î"
                  >
                    –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
                  </a>
                </div>
              </div>
            </article>
          ))}
        </section>

        {/* –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ */}
        {filtered.length === 0 && (
          <div className="text-center text-zinc-600 mt-10">
            –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ –ø–æ—à—É–∫.
          </div>
        )}
      </main>
    </div>
  );
}
